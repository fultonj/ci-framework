---
# Entry point for the CI Framework tool.
# Running by this playbook, and providing the needed information, you will
# be able to deploy various scenarios based on EDPM.
# Note that this playbook *must* be called from within
# openstack-k8s-operators/install_yaml repository in order to leverage its
# own methods.

- name: Remove status flag
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  tasks:
    - name: Delete success flag if exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/cifmw-success"
        state: absent

    - name: Inherit from parent scenarios if needed
      ansible.builtin.include_tasks:
        file: "ci/playbooks/tasks/inherit_parent_scenario.yml"

    - name: Run bootstrap
      ansible.builtin.import_role:
        name: cifmw_setup
        tasks_from: bootstrap.yml

    - name: Run pre_infra hooks
      vars:
        step: pre_infra
      ansible.builtin.import_role:
        name: run_hook
      tags:
        - infra

- name: Prepare host virtualization
  hosts: "{{ ('virthosts' in groups) | ternary('virthosts', cifmw_target_host | default('localhost') ) }}"
  tasks:
    - name: Run prepare host virtualization
      vars:
        step: pre_infra
      ansible.builtin.import_role:
        name: cifmw_setup
        tasks_from: host_virtualization.yml
      tags:
        - infra

- name: Run cifmw_setup infra.yml
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  tasks:
    - name: Prepare the platform
      vars:
        step: pre_infra
      ansible.builtin.import_role:
        name: cifmw_setup
        tasks_from: infra.yml
      tags:
        - infra

- name: Import package build playbook
  ansible.builtin.import_playbook: playbooks/03-build-packages.yml
  tags:
    - build-packages

- name: Import containers build playbook
  ansible.builtin.import_playbook: playbooks/04-build-containers.yml
  tags:
    - build-containers

- name: Import operators build playbook
  ansible.builtin.import_playbook: playbooks/05-build-operators.yml
  tags:
    - build-operators

- name: Import deploy edpm playbook
  ansible.builtin.import_playbook: playbooks/06-deploy-edpm.yml
  tags:
    - edpm

- name: Import VA deployment playbook
  ansible.builtin.import_playbook: playbooks/06-deploy-architecture.yml
  tags:
    - edpm

- name: Run Post-deployment admin setup steps, test, and compliance scan
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    - name: Run cifmw_setup admin_setup.yml
      ansible.builtin.import_role:
        name: cifmw_setup
        tasks_from: admin_setup.yml
      tags:
        - admin-setup

    - name: Run Test
      vars:
        pre_tests: "{{ (lookup('vars', 'pre_tempest', default=[])) }}"
        post_tests: "{{ (lookup('vars', 'post_tempest', default=[])) }}"
      ansible.builtin.import_role:
        name: cifmw_setup
        tasks_from: run_tests.yml
      tags:
        - run-tests

    - name: Run compliance scan for controllers
      ansible.builtin.import_role:
        name: compliance
      vars:
        cifmw_compliance_podman_username: "{{ cifmw_registry_token.credentials.username }}"
        cifmw_compliance_podman_password: "{{ cifmw_registry_token.credentials.password }}"
      when: cifmw_run_operators_compliance_scans | default('false') | bool
      tags:
        - compliance

- name: Run compliance scan for computes
  hosts: "{{ groups['computes'] | default ([]) }}"
  gather_facts: true
  tasks:
    - name: Run compliance scan for one compute
      ansible.builtin.import_role:
        name: compliance
        tasks_from: run_compute_node_scans.yml
      run_once: true
      when: cifmw_run_compute_compliance_scans | default('false') | bool
  tags:
    - compliance

- name: Run hooks and inject status flag
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    - name: Run pre_end hooks
      tags:
        - pre-end
      vars:
        step: pre_end
      ansible.builtin.import_role:
        name: run_hook

    - name: Inject success flag
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/cifmw-success"
        state: touch
        mode: "0644"

- name: Run log related tasks
  ansible.builtin.import_playbook: playbooks/99-logs.yml
  tags:
    - logs
